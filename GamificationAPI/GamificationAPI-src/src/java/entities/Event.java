package entities;
// Generated Nov 24, 2013 1:07:37 PM by Hibernate Tools 3.6.0


import DAL.EventTypeDAL;
import DAL.ObjectDAL;
import DAL.PlayerDAL;
import java.text.SimpleDateFormat;
import java.util.Date;
import org.codehaus.jettison.json.JSONObject;

/**
 * Event generated by hbm2java
 */
public class Event  implements java.io.Serializable, JSONable {


     private Integer id;
     private Object object;
     private Player player;
     private EventType eventType;
     private Date date;

    public Event() {
    }

    public Event(Object object, Player player, EventType eventType, Date date) {
       this.object = object;
       this.player = player;
       this.eventType = eventType;
       this.date = date;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Object getObject() {
        return this.object;
    }
    
    public void setObject(Object object) {
        this.object = object;
    }
    public Player getPlayer() {
        return this.player;
    }
    
    public void setPlayer(Player player) {
        this.player = player;
    }
    public EventType getEventType() {
        return this.eventType;
    }
    
    public void setEventType(EventType eventType) {
        this.eventType = eventType;
    }
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }

     @Override
    public JSONObject toJSON() {
        JSONObject obj = new JSONObject();
        try {
            obj.put("id", this.getId());
            obj.put("date", this.getDate());
            if(this.player != null){
                obj.put("player", this.player.toJSON());
            }
            if(this.object != null){
                obj.put("object", this.object.toJSON());
            }
            if (this.eventType != null) {
                obj.put("eventType", this.eventType.toJSON());
            }
        } catch (Exception ex) {
            System.out.println("Error Event-toJSON: " + ex.getMessage());
        }
        return obj;
    }

    @Override
    public void fromJSON(JSONObject obj) {
        try {
            if (obj.has("date")) {
                SimpleDateFormat a = new SimpleDateFormat("yyyy-MM-dd");
                this.setDate(a.parse(obj.getString("date")));
            }
            if (obj.has("id")) {
                this.setId(obj.getInt("id"));
            }
            if (obj.has("eventType")) {
                this.setEventType(EventTypeDAL.getEventTypeById(obj.getInt("eventType")));
            }
            if (obj.has("player")) {
                this.setPlayer(PlayerDAL.getPlayerById("" + obj.getInt("player")));
            }
            if (obj.has("object")) {
                this.setObject(ObjectDAL.getObjectById(obj.getInt("object")));
            }
        } catch (Exception ex) {
            System.out.println("Error in Event-fromJson: " + ex.getMessage());
        }
    }




}


