package entities;
// Generated Nov 24, 2013 1:07:37 PM by Hibernate Tools 3.6.0


import DAL.ApplicationDAL;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;

/**
 * Player generated by hbm2java
 */
public class Player  implements java.io.Serializable, JSONable {


     private Integer id;
     private Application application;
     private String name;
     private String userType;
     private Set<TeamPlayer> teamPlayersForTeamId = new HashSet<TeamPlayer>(0);
     private Set<TeamPlayer> teamPlayersForPlayerId = new HashSet<TeamPlayer>(0);
     private Set<Object> objects = new HashSet<Object>(0);
     private Set<PlayerReward> playerRewards = new HashSet<PlayerReward>(0);
     private Set<Event> events = new HashSet<Event>(0);

    public Player() {
    }

	
    public Player(Application application, String name, String userType) {
        this.application = application;
        this.name = name;
        this.userType = userType;
    }
    public Player(Application application, String name, String userType, Set<TeamPlayer> teamPlayersForTeamId, Set<TeamPlayer> teamPlayersForPlayerId, Set<Object> objects, Set<PlayerReward> playerRewards, Set<Event> events) {
       this.application = application;
       this.name = name;
       this.userType = userType;
       this.teamPlayersForTeamId = teamPlayersForTeamId;
       this.teamPlayersForPlayerId = teamPlayersForPlayerId;
       this.objects = objects;
       this.playerRewards = playerRewards;
       this.events = events;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Application getApplication() {
        return this.application;
    }
    
    public void setApplication(Application application) {
        this.application = application;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public String getUserType() {
        return this.userType;
    }
    
    public void setUserType(String userType) {
        this.userType = userType;
    }
    public Set<TeamPlayer> getTeamPlayersForTeamId() {
        return this.teamPlayersForTeamId;
    }
    
    public void setTeamPlayersForTeamId(Set<TeamPlayer> teamPlayersForTeamId) {
        this.teamPlayersForTeamId = teamPlayersForTeamId;
    }
    public Set<TeamPlayer> getTeamPlayersForPlayerId() {
        return this.teamPlayersForPlayerId;
    }
    
    public void setTeamPlayersForPlayerId(Set<TeamPlayer> teamPlayersForPlayerId) {
        this.teamPlayersForPlayerId = teamPlayersForPlayerId;
    }
    public Set<Object> getObjects() {
        return this.objects;
    }
    
    public void setObjects(Set<Object> objects) {
        this.objects = objects;
    }
    public Set<PlayerReward> getPlayerRewards() {
        return this.playerRewards;
    }
    
    public void setPlayerRewards(Set<PlayerReward> playerRewards) {
        this.playerRewards = playerRewards;
    }
    public Set<Event> getEvents() {
        return this.events;
    }
    
    public void setEvents(Set<Event> events) {
        this.events = events;
    }

     @Override
    public JSONObject toJSON(){
         try {
             JSONObject obj = new JSONObject();
             obj.put("id", this.id);
             obj.put("application", this.application==null?null:this.application.getId());
             obj.put("name", this.name);
             obj.put("userType", this.userType);
             return obj;
         } catch (Exception ex) {
             
         }
         return null;
    }

    @Override
    public void fromJSON(JSONObject obj) {
         try {
            if (obj.has("name")) {
                this.setName(obj.getString("name"));
            }
            if (obj.has("userType")) {
                this.setUserType(obj.getString("userType"));
            }
            if (obj.has("application")) {
                this.setApplication(ApplicationDAL.getApplicationById(obj.getInt("application")));
            }
        } catch (Exception ex) {
            System.out.println("Error in Player-fromJson: " + ex.getMessage());
        }
    }




}


