package entities;
// Generated Nov 4, 2013 10:45:52 PM by Hibernate Tools 3.6.0


import DAL.ObjectTypeDAL;
import DAL.PlayerDAL;
import DAL.RewardDAL;
import java.util.HashSet;
import java.util.Set;
import org.codehaus.jettison.json.JSONObject;

/**
 * Object generated by hbm2java
 */
public class Object  implements java.io.Serializable, JSONable {


     private Integer id;
     private Player player;
     private ObjectType objectType;
     private String name;
     private Set<Event> events = new HashSet<Event>(0);

    public Object() {
    }

	
    public Object(Player player, ObjectType objectType) {
        this.player = player;
        this.objectType = objectType;
    }
    public Object(Player player, ObjectType objectType, String name, Set<Event> events) {
       this.player = player;
       this.objectType = objectType;
       this.name = name;
       this.events = events;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public Player getPlayer() {
        return this.player;
    }
    
    public void setPlayer(Player player) {
        this.player = player;
    }
    public ObjectType getObjectType() {
        return this.objectType;
    }
    
    public void setObjectType(ObjectType objectType) {
        this.objectType = objectType;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public Set<Event> getEvents() {
        return this.events;
    }
    
    public void setEvents(Set<Event> events) {
        this.events = events;
    }

    @Override
    public JSONObject toJSON() {
        JSONObject obj = new JSONObject();
        try {
            obj.put("id", this.getId());
            obj.put("name", this.getName());
            if(this.player != null){
                obj.put("player", this.player.toJSON());
            }
            if (this.objectType != null) {
                obj.put("objectType", this.objectType.toJSON());
            }
        } catch (Exception ex) {
            System.out.println("Error Object-toJSON: " + ex.getMessage());
        }
        return obj;
    }

    @Override
    public void fromJSON(JSONObject obj) {
        try {
            if (obj.has("name")) {
                this.setName(obj.getString("name"));
            }
            if (obj.has("id")) {
                this.setId(obj.getInt("id"));
            }
            if (obj.has("objectType")) {
                this.setObjectType(ObjectTypeDAL.getObjectTypeById(obj.getInt("objectType")));
            }
            if (obj.has("player")) {
                this.setPlayer(PlayerDAL.getPlayerById("" + obj.getInt("player")));
            }
        } catch (Exception ex) {
            System.out.println("Error in Object-fromJson: " + ex.getMessage());
        }
    }



}


