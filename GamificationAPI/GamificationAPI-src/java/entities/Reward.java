package entities;
// Generated Nov 4, 2013 10:45:52 PM by Hibernate Tools 3.6.0

import DAL.ApplicationDAL;
import java.util.HashSet;
import java.util.Set;
import org.codehaus.jettison.json.JSONObject;

/**
 * Reward generated by hbm2java
 */
public class Reward implements java.io.Serializable, JSONable {

    private Integer id;
    private Application application;
    private String name;
    private String descriptiom;
    private Voucher voucher;
    private Quest quest;
    private Set<Action> actions = new HashSet<Action>(0);
    private Set<PlayerReward> playerRewards = new HashSet<PlayerReward>(0);
    private Point point;
    private Badge badge;
    private Privilege privilege;

    public Reward() {
    }

    public Reward(Application application, String name) {
        this.application = application;
        this.name = name;
    }

    public Reward(Application application, String name, String descriptiom, Voucher voucher, Quest quest, Set<Action> actions, Set<PlayerReward> playerRewards, Point point, Badge badge, Privilege privilege) {
        this.application = application;
        this.name = name;
        this.descriptiom = descriptiom;
        this.voucher = voucher;
        this.quest = quest;
        this.actions = actions;
        this.playerRewards = playerRewards;
        this.point = point;
        this.badge = badge;
        this.privilege = privilege;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Application getApplication() {
        return this.application;
    }

    public void setApplication(Application application) {
        this.application = application;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescriptiom() {
        return this.descriptiom;
    }

    public void setDescriptiom(String descriptiom) {
        this.descriptiom = descriptiom;
    }

    public Voucher getVoucher() {
        return this.voucher;
    }

    public void setVoucher(Voucher voucher) {
        this.voucher = voucher;
    }

    public Quest getQuest() {
        return this.quest;
    }

    public void setQuest(Quest quest) {
        this.quest = quest;
    }

    public Set<Action> getActions() {
        return this.actions;
    }

    public void setActions(Set<Action> actions) {
        this.actions = actions;
    }

    public Set<PlayerReward> getPlayerRewards() {
        return this.playerRewards;
    }

    public void setPlayerRewards(Set<PlayerReward> playerRewards) {
        this.playerRewards = playerRewards;
    }

    public Point getPoint() {
        return this.point;
    }

    public void setPoint(Point point) {
        this.point = point;
    }

    public Badge getBadge() {
        return this.badge;
    }

    public void setBadge(Badge badge) {
        this.badge = badge;
    }

    public Privilege getPrivilege() {
        return this.privilege;
    }

    public void setPrivilege(Privilege privilege) {
        this.privilege = privilege;
    }

    @Override
    public JSONObject toJSON() {
        JSONObject obj = new JSONObject();
        try {
            obj.put("name", this.getName());
            obj.put("id", this.getId());
            obj.put("description", this.getDescriptiom());
            obj.put("application", this.application == null ? null : this.application.getId());
        } catch (Exception ex) {
            System.out.println("Error in Reward-toJSON: " + ex.getMessage());
        }
        return obj;
    }

    @Override
    public void fromJSON(JSONObject obj) {
        try {
            if (obj.has("id")) {
                this.setId(obj.getInt("id"));
            }
            if (obj.has("name")) {
                this.setName(obj.getString("name"));
            }
            if (obj.has("description")) {
                this.setDescriptiom(obj.getString("description"));
            }
            if (obj.has("application")) {
                this.setApplication(ApplicationDAL.getApplicationById(obj.getInt("application")));
            }
        } catch (Exception ex) {
            System.out.println("Error in Reward-fromJSON: " + ex.getMessage());
        }
    }

}
